from pyrogram import Client, filters
from pyrogram.types import Message
from ANNIEMUSIC import app 
# Assuming 'api' is some external module you're using for ccgen functionality
# from some_module import api

@app.on_message(filters.command(["gen", "ccgen"], [".", "!", "/"]))
async def gen_cc(client: Client, message: Message):
    # Check if the user provided a BIN
    if len(message.command) < 2:
        await message.reply_text("⚠️ Please provide a BIN to generate CC.")
        return
    
    # Try to delete the user's command message
    try:
        await message.delete()
    except Exception as delete_error:
        print(f"Failed to delete the message: {delete_error}")

    aux = await message.reply_text("✅ Generating...")

    # Extract the BIN from the message
    bin_input = message.text.split(None, 1)[1]

    # Validate BIN length
    if len(bin_input) < 6:
        await aux.edit("🚫 Invalid BIN. Please provide at least the first 6 digits.")
        return

    try:
        # Generate credit cards
        resp = await api.ccgen(bin_input, 10)
        cards = resp['liveCC']
        name = message.from_user.first_name
        time_taken = resp['took']
        bin_info = resp['results'][0]['bin']

        # Prepare the message to be sent
        response_text = f"""
❅ ✧ 𝗕𝗥𝗢𝗞𝗘𝗡 𝗫 𝗖𝗖 𝗚𝗘𝗡𝗘𝗥𝗔𝗧𝗢𝗥 ✧ ❅

`{cards[0]}`\n`{cards[1]}`\n`{cards[2]}`
`{cards[3]}`\n`{cards[4]}`\n`{cards[5]}`
`{cards[6]}`\n`{cards[7]}`\n`{cards[8]}`
`{cards[9]}`

**-----------------------------**

**🪪 Generated By:** {name}

**💳 BIN:** `{bin_input}`
**🪪 Dev:** [『𝙼𝚁』〆𝔅𝔯𝔬𝔨𝔢𝔫](https://t.me/AboutBrokenx)
**⏳ Time Taken:** `{time_taken}`
𝗕𝗶𝗻 𝗟𝗼𝗼𝗸𝘂𝗽 𝗥𝗲𝘀𝘂𝗹𝘁 🔍
**🔎INFO :** `{bin_info}`\n\n"""
        
        await aux.edit(response_text)

    except Exception as e:
        print(f"Error during card generation: {e}")
        await aux.edit(f"**Error:** `{e}`")

